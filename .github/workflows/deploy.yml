name: Azure Static Web Apps CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'api'
  NODE_VERSION: '18.x'

jobs:
  build_and_deploy_function:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4.1.1

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v4.0.1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Resolve Project Dependencies Using Npm'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        npm install
        npm run build --if-present
        npm run test --if-present
        popd    

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1.5.1
      id: fa
      with:
        app-name: ${{ vars.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  build_and_deploy_swa:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: [build_and_deploy_function]
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          submodules: true
          lfs: false

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_POLITE_BEACH_076C08A1E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "/app"
          # Empty the api_location if you are bringing your own API
          api_location: ""
          output_location: "dist"
      
  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_POLITE_BEACH_076C08A1E }}
          action: "close"
          app_location: "/app"

  logic_app_build:
    runs-on: ubuntu-latest
    needs: [build_and_deploy_function]
    steps: 
    - name: Checkout
      uses: actions/checkout@v4.1.1
    - name: Package logic
      run: (cd logic_app; mkdir -p ../output; zip -r ../output/logic_app.zip .)
    
    - name: Upload app zip package
      uses: actions/upload-artifact@v4.3.1
      with:
        name: logic_app
        path: ./output/
        retention-days: 1
  
  logic_app_deploy: 
    name: Deploy 
    runs-on: ubuntu-latest
    needs: [logic_app_build]
    environment: 
      name: production
    steps: 
    - name: Checkout
      uses: actions/checkout@v4.1.1    
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true 
    - uses: actions/download-artifact@v4.1.2
      with:
        name: logic_app
        path: ./output/
        
    - name: Get publish Profile
      id: publishprofile
      uses: azure/powershell@v1.4.0
      with:
        inlineScript: |
          $profile = Get-AzWebAppPublishingProfile `
              -ResourceGroupName ${{ vars.RG_LA }} `
              -Name ${{ vars.LA_NAME }}
          $profile = $profile.Replace("`r", "").Replace("`n", "")
          Write-Output "::set-output name=profile::$profile"
        azPSVersion: latest

    - name: Deploy to Azure Logic App
      uses: Azure/functions-action@v1.5.1
      id: la
      with:
        app-name: ${{ vars.RG_LA }}
        package: './output/logic_app.zip'
        publish-profile: ${{secrets.publishprofile.outputs.profile}}

    - name: Swap parameter files 
      id: params
      uses: azure/CLI@v1.0.9
      with:
        inlineScript: |
          az functionapp deploy --resource-group ${{ vars.RG_LA }} --name ${{ vars.LA_NAME }} --src-path  logic_app/azure.parameters.json --type static --target-path parameters.json